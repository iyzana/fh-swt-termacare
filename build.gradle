buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.0'
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M4'
    }
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'

mainClassName = 'de.adesso.termacare.TerMa'

repositories {
    jcenter()
    maven { url "https://jitpack.io" }
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.7.25'
    compile 'org.apache.logging.log4j:log4j-core:2.8.2'
    compile 'org.apache.logging.log4j:log4j-slf4j-impl:2.8.2'

    compile 'org.hibernate:hibernate-core:5.2.9.Final'
    compile 'org.hibernate:hibernate-java8:5.2.9.Final'

    compile 'mysql:mysql-connector-java:6.0.6'

    compile 'org.xerial:sqlite-jdbc:3.16.1'
    compile 'com.github.gwenn:sqlite-dialect:master'

    compileOnly 'org.projectlombok:lombok:1.16.16'

    testCompile 'org.junit.jupiter:junit-jupiter-api:5.0.0-M4'
    testRuntime 'org.junit.jupiter:junit-jupiter-engine:5.0.0-M4'
    testCompile 'org.mockito:mockito-core:2.8.9'
}

jar {
    manifest {
        attributes(
                'Class-Path': (configurations.compile).collect { it.getName() }.join(' '),
                'Main-Class': 'de.adesso.termacare.TerMa'
        )
    }
}